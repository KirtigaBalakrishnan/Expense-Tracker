import tkinter as tk
from tkinter import ttk, messagebox
import csv
import matplotlib.pyplot as plt
#import datetime #New Library

class Expense: #OBOP
    def __init__(self, date, amount, category):
        self.date = date
        self.amount = amount
        self.category = category


class Expense_Tracker_App:
    def __init__(self, main_window): #Usage of functions
        self.main_window = main_window
        self.main_window.title("Expense Tracker")

        self.expenses = []

        self.date_label = ttk.Label(main_window, text="Date (YYYY-MM-DD):")
        self.date_label.grid(row=0, column=0, padx=10, pady=10)
        self.date_entry = ttk.Entry(main_window)
        self.date_entry.grid(row=0, column=1, padx=10, pady=10)

        self.amount_label = ttk.Label(main_window, text="Amount:")
        self.amount_label.grid(row=1, column=0, padx=10, pady=10)
        self.amount_entry = ttk.Entry(main_window)
        self.amount_entry.grid(row=1, column=1, padx=10, pady=10)

        self.category_label = ttk.Label(main_window, text="Category:")
        self.category_label.grid(row=2, column=0, padx=10, pady=10)
        self.category_combobox = ttk.Combobox(main_window,
                                              values=["Grocery", "Transport", "Utilities", "Entertainment", "House (Rent or EMI)", "Miscellaneous"])
        self.category_combobox.grid(row=2, column=1, padx=10, pady=10)

        self.add_button = ttk.Button(main_window, text="Add Expense", command=self.add_expense)
        self.add_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

        self.clear_button = ttk.Button(main_window, text="Clear", command=self.clear_button)
        self.clear_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

        self.sum_button = ttk.Button(main_window, text="Sum", command=self.sum_expenses)
        self.sum_button.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

        #self.generate_button = ttk.Button(main_window, text="Generate Report", command=self.generate_report)
        #self.generate_button.grid(row=6, column=0, columnspan=2, padx=10, pady=10)


    def clear_button(self):
        self.date_entry.delete(0, tk.END)
        self.amount_entry.delete(0, tk.END)
        self.category_combobox.set("")

    def add_expense(self):
        date = self.date_entry.get()
        amount = self.amount_entry.get()
        category = self.category_combobox.get()
        if not date or not amount or not category: #1st Validation check
            messagebox.showerror("Error", "Please fill all the fields.")
            return
        try:
            amount = float(amount) #2nd validation check
        except ValueError: #
            messagebox.showerror("Error", "Amount must be a number.")
            return

        #try:
            #datetime.datetime.strptime(date, "%Y-%02m-%02d") #3rd validation check
        #except ValueError:
            #messagebox.showerror("Error", "Invalid date format. Please use YYYY-MM-DD.")
            #return

        expense = Expense(date, amount, category)
        self.expenses.append(expense)

        with open('expenses.csv', mode='a', newline='') as file: #File Handling, Open and save to CSV
            writer = csv.writer(file)
            writer.writerow([expense.date, expense.category, expense.amount])
        messagebox.showinfo("Success", "Expense added successfully.")

    def sum_expenses(self):
        date = self.date_entry.get()
        total_expense = 0
        with open('expenses.csv', 'r') as file:
            reader = csv.reader(file)
            for row in reader:
                if row[0] == date:
                    total_expense += float(row[2])

        if total_expense > 0: #Usage of if, else loop
            messagebox.showinfo("Total Expense", "Total expense for " + date + ": $" + str(float(total_expense)))
        else:
            messagebox.showerror("Error", "No expenses found for " + date)

main_window = tk.Tk()
app = Expense_Tracker_App(main_window)
main_window.mainloop()

